{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'flatpickr/dist/themes/airbnb.css';\n\nexport const toastOptions = {\n  invalid: {\n    message: 'Please select a date and time first.',\n    position: 'topRight',\n    timeout: 2000,\n    progressBar: false,\n    transitionIn: 'bounceInDown',\n    transitionOut: 'fadeOutUp',\n  },\n  valid: {\n    message: 'Time is up!',\n    position: 'topRight',\n    timeout: 5000,\n    progressBar: false,\n    transitionIn: 'bounceInDown',\n    transitionOut: 'fadeOutUp',\n  },\n  caution: {\n    message: 'Please choose a date in the future',\n    position: 'topRight',\n    timeout: 2000,\n    progressBar: false,\n    transitionIn: 'bounceInDown',\n    transitionOut: 'fadeOutUp',\n  },\n};\n\nlet selectedDate = null;\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  timerDisplay: document.querySelectorAll('.value'),\n};\n\nflatpickr(refs.input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const currentDate = Date.now();\n    selectedDate = selectedDates[0].getTime();\n\n    if (currentDate >= selectedDate) {\n      iziToast.info(toastOptions.caution);\n      refs.startBtn.disabled = true;\n      return;\n    }\n\n    refs.startBtn.disabled = false;\n  },\n});\n\nconst updateTimer = (timerInterval, btnStart) => {\n  const now = Date.now();\n  const timeDifference = selectedDate - now;\n\n  if (timeDifference < 0) {\n    clearInterval(timerInterval);\n    refs.input.disabled = false;\n    iziToast.success(toastOptions.valid);\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n  const timerItems = [\n    zeroPad(days),\n    zeroPad(hours),\n    zeroPad(minutes),\n    zeroPad(seconds),\n  ];\n\n  timerItems.forEach((value, index) => {\n    refs.timerDisplay[index].textContent = value;\n  });\n};\n\nrefs.startBtn.addEventListener('click', event => {\n  if (!selectedDate) {\n    iziToast.info(toastOptions.invalid);\n    return;\n  }\n\n  const btnStart = event.currentTarget;\n  btnStart.disabled = true;\n  refs.input.disabled = true;\n\n  const timerInterval = setInterval(() => {\n    updateTimer(timerInterval, btnStart);\n  }, 1000);\n});\n\n// Utils\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction zeroPad(value) {\n  try {\n    const stringifyValue = String(value);\n    return stringifyValue.padStart(2, '0');\n  } catch (error) {\n    console.error('The incoming parameter is not of type string');\n  }\n}"],"names":["toastOptions","selectedDate","refs","flatpickr","selectedDates","currentDate","iziToast","updateTimer","timerInterval","btnStart","now","timeDifference","days","hours","minutes","seconds","convertMs","zeroPad","value","index","event","ms"],"mappings":"+IAOO,MAAMA,EAAe,CAC1B,QAAS,CACP,QAAS,uCACT,SAAU,WACV,QAAS,IACT,YAAa,GACb,aAAc,eACd,cAAe,WAChB,EACD,MAAO,CACL,QAAS,cACT,SAAU,WACV,QAAS,IACT,YAAa,GACb,aAAc,eACd,cAAe,WAChB,EACD,QAAS,CACP,QAAS,qCACT,SAAU,WACV,QAAS,IACT,YAAa,GACb,aAAc,eACd,cAAe,WAChB,CACH,EAEA,IAAIC,EAAe,KACnB,MAAMC,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,SAAU,SAAS,cAAc,cAAc,EAC/C,aAAc,SAAS,iBAAiB,QAAQ,CAClD,EAEAC,EAAUD,EAAK,MAAO,CACpB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQE,EAAe,CACrB,MAAMC,EAAc,KAAK,MAGzB,GAFAJ,EAAeG,EAAc,CAAC,EAAE,QAAO,EAEnCC,GAAeJ,EAAc,CAC/BK,EAAS,KAAKN,EAAa,OAAO,EAClCE,EAAK,SAAS,SAAW,GACzB,MACD,CAEDA,EAAK,SAAS,SAAW,EAC1B,CACH,CAAC,EAED,MAAMK,EAAc,CAACC,EAAeC,IAAa,CAC/C,MAAMC,EAAM,KAAK,MACXC,EAAiBV,EAAeS,EAEtC,GAAIC,EAAiB,EAAG,CACtB,cAAcH,CAAa,EAC3BN,EAAK,MAAM,SAAW,GACtBI,EAAS,QAAQN,EAAa,KAAK,EACnC,MACD,CAED,KAAM,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAE/C,CACjBM,EAAQL,CAAI,EACZK,EAAQJ,CAAK,EACbI,EAAQH,CAAO,EACfG,EAAQF,CAAO,CACnB,EAEa,QAAQ,CAACG,EAAOC,IAAU,CACnCjB,EAAK,aAAaiB,CAAK,EAAE,YAAcD,CAC3C,CAAG,CACH,EAEAhB,EAAK,SAAS,iBAAiB,QAASkB,GAAS,CAC/C,GAAI,CAACnB,EAAc,CACjBK,EAAS,KAAKN,EAAa,OAAO,EAClC,MACD,CAED,MAAMS,EAAWW,EAAM,cACvBX,EAAS,SAAW,GACpBP,EAAK,MAAM,SAAW,GAEtB,MAAMM,EAAgB,YAAY,IAAM,CACtCD,EAAYC,CAAuB,CACpC,EAAE,GAAI,CACT,CAAC,EAGD,SAASQ,EAAUK,EAAI,CAQrB,MAAMT,EAAO,KAAK,MAAMS,EAAK,KAAG,EAE1BR,EAAQ,KAAK,MAAOQ,EAAK,MAAO,IAAI,EAEpCP,EAAU,KAAK,MAAQO,EAAK,MAAO,KAAQ,GAAM,EAEjDN,EAAU,KAAK,MAASM,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAQC,EAAO,CACtB,GAAI,CAEF,OADuB,OAAOA,CAAK,EACb,SAAS,EAAG,GAAG,CACtC,MAAe,CACd,QAAQ,MAAM,8CAA8C,CAC7D,CACH"}